@use "../utilities/variables" as var;

// --- MEDIA QUERIES ---
@mixin minw($min-width) {
	@media (min-width: $min-width) {
		@content;
	}
}

@mixin maxw($max-width) {
	@media (max-width: $max-width) {
		@content;
	}
}

@mixin minh($min-height) {
	@media (min-height: $min-height) {
		@content;
	}
}

@mixin maxh($max-height) {
	@media (max-height: $max-height) {
		@content;
	}
}

// --- GRID & LAYOUT ---
@mixin ie-grid-fix($cols) {
	@for $i from 1 through $cols {
		&:nth-child(#{$i}),
		&:nth-child(#{$cols}n + #{$i}) {
			-ms-grid-column: $i;
		}
	}
	@for $i from 1 through 100 {
		&:nth-child(#{$i}) {
			-ms-grid-row: ceil($i / $cols);
		}
	}
}

// --- FONT-SIZE & SPACING ---
@function getVW($size) {
	@return $size / 1920 * 100vw;
}

// --- PLACEHOLDER STYLES ---
@mixin placeholder($color, $font, $weight, $size){
	&::-webkit-input-placeholder {
		color: $color;
		font-family: $font;
		font-weight: $weight;
		font-size: $size;
	}
	&:-moz-placeholder {
		color: $color;
		font-family: $font;
		font-weight: $weight;
		font-size: $size;
	}
	&::-moz-placeholder {
		color: $color;
		font-family: $font;
		font-weight: $weight;
		font-size: $size;
	}
	&:-ms-input-placeholder {
		color: $color;
		font-family: $font;
		font-weight: $weight;
		font-size: $size;
	}
}

// --- TRANSITIONS & ANIMATIONS ---
@mixin sweep-to-right($color) {
	position: relative;
	transform: perspective(1px) translateZ(0);
	transition: color 0.3s;

	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: $color;
		transform: scaleX(0);
		transform-origin: 0 50%;
		transition: transform 0.3s ease-out;
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		transform: scaleX(1);
	}
}

@mixin hover-line-from-left($color-of-hover, $height-of-line) {
	position: relative;
	overflow: hidden;
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
	transform: translateZ(0);
	backface-visibility: hidden;

	&:before {
		content: '';
		position: absolute;
		left: 0;
		right: 100%;
		bottom: 0;
		background: $color-of-hover;
		height: $height-of-line;
		transition: right 0.2s ease-out;
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		right: 0;
	}
}

@mixin hide-on($from: null, $to: null) {
	@if $from and $to {
		@media (min-width: $from) and (max-width: $to) {
			display: none !important;
		}
	} @else if $from {
		@media (min-width: $from) {
			display: none !important;
		}
	} @else if $to {
		@media (max-width: $to) {
			display: none !important;
		}
	}
}

@mixin wrapper($max-width: var(--w-content), $default-padding: var(--c-padding), $mobile-padding: 20px) {
	max-width: $max-width;
	margin: 0 auto;
	padding: 0 $default-padding;
	box-sizing: border-box;
	z-index: 2;

	@include maxw(var.$w-mob-s) {
		padding: $mobile-padding;
	}

	@include maxw(var.$w-mob) {
		padding: 0 $mobile-padding;
	}

	@include maxw(var.$w-tab) {
		padding: 0 $default-padding;
	}

	@include maxw(var.$w-laptop) {
		padding: 0 $default-padding;
	}

	@include minw(var.$w-min) {
		width: 100%;
		padding: 0 $mobile-padding;
	}

	@include maxw(var.$w-max) {
		width: 100%;
		padding: 0 $default-padding;
	}
}

@mixin flexbox($alignment: center, $align: center) {
	display: flex;
	justify-content: $alignment;
	align-items: $align;
}

// --- SPACING GENERATOR ---
@mixin spacer($heights...) {
	@each $height in $heights {
		&--#{$height} {
			display: block;
			width: 100%;
			height: #{$height}px;
		}
	}
}